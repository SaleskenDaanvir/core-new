/*
 * Salesken Organization APIs
 * <b>Introduction</b><br><br>This is collection of Organization APIs. These are used to create organization, fetch organization records, update organization and invoke organization.<br><br> <b>Authentication</b><br><br> Salesken Organization APIs are authenticated using Basic Authentication with your Authentication API Key and OAuth2. The OAuth2 are available after you sign-up with the Salesken.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: itadmin@salesken.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package invalidPackageName;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import invalidPackageName.DatatableColumn;
import invalidPackageName.DatatableOrder;
import invalidPackageName.DatatableSearch;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * DatatableModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-06-08T07:59:41.201Z[GMT]")public class DatatableModel   {
  @JsonProperty("draw")
  private Integer draw = 1;

  @JsonProperty("start")
  private Integer start = 0;

  @JsonProperty("length")
  private Integer length = 1;

  @JsonProperty("search")
  private DatatableSearch search = null;

  @JsonProperty("columns")
  private List<DatatableColumn> columns = null;

  @JsonProperty("order")
  private List<DatatableOrder> order = null;

  public DatatableModel draw(Integer draw) {
    this.draw = draw;
    return this;
  }

  /**
   * Get draw
   * minimum: 1
   * maximum: 2147483647
   * @return draw
   **/
  @JsonProperty("draw")
  @Schema(required = true, description = "")
  @NotNull
 @Min(1) @Max(2147483647)  public Integer getDraw() {
    return draw;
  }

  public void setDraw(Integer draw) {
    this.draw = draw;
  }

  public DatatableModel start(Integer start) {
    this.start = start;
    return this;
  }

  /**
   * Get start
   * minimum: 0
   * maximum: 2147483647
   * @return start
   **/
  @JsonProperty("start")
  @Schema(required = true, description = "")
  @NotNull
 @Min(0) @Max(2147483647)  public Integer getStart() {
    return start;
  }

  public void setStart(Integer start) {
    this.start = start;
  }

  public DatatableModel length(Integer length) {
    this.length = length;
    return this;
  }

  /**
   * Get length
   * minimum: -1
   * maximum: 2147483647
   * @return length
   **/
  @JsonProperty("length")
  @Schema(required = true, description = "")
  @NotNull
 @Min(-1) @Max(2147483647)  public Integer getLength() {
    return length;
  }

  public void setLength(Integer length) {
    this.length = length;
  }

  public DatatableModel search(DatatableSearch search) {
    this.search = search;
    return this;
  }

  /**
   * Get search
   * @return search
   **/
  @JsonProperty("search")
  @Schema(description = "")
  @Valid
  public DatatableSearch getSearch() {
    return search;
  }

  public void setSearch(DatatableSearch search) {
    this.search = search;
  }

  public DatatableModel columns(List<DatatableColumn> columns) {
    this.columns = columns;
    return this;
  }

  public DatatableModel addColumnsItem(DatatableColumn columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<DatatableColumn>();
    }
    this.columns.add(columnsItem);
    return this;
  }

  /**
   * Get columns
   * @return columns
   **/
  @JsonProperty("columns")
  @Schema(description = "")
  @Valid
  public List<DatatableColumn> getColumns() {
    return columns;
  }

  public void setColumns(List<DatatableColumn> columns) {
    this.columns = columns;
  }

  public DatatableModel order(List<DatatableOrder> order) {
    this.order = order;
    return this;
  }

  public DatatableModel addOrderItem(DatatableOrder orderItem) {
    if (this.order == null) {
      this.order = new ArrayList<DatatableOrder>();
    }
    this.order.add(orderItem);
    return this;
  }

  /**
   * Get order
   * @return order
   **/
  @JsonProperty("order")
  @Schema(description = "")
  @Valid
  public List<DatatableOrder> getOrder() {
    return order;
  }

  public void setOrder(List<DatatableOrder> order) {
    this.order = order;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatatableModel datatableModel = (DatatableModel) o;
    return Objects.equals(this.draw, datatableModel.draw) &&
        Objects.equals(this.start, datatableModel.start) &&
        Objects.equals(this.length, datatableModel.length) &&
        Objects.equals(this.search, datatableModel.search) &&
        Objects.equals(this.columns, datatableModel.columns) &&
        Objects.equals(this.order, datatableModel.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(draw, start, length, search, columns, order);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatatableModel {\n");
    
    sb.append("    draw: ").append(toIndentedString(draw)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    search: ").append(toIndentedString(search)).append("\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

/*
 * Salesken Organization APIs
 * <b>Introduction</b><br><br>This is collection of Organization APIs. These are used to create organization, fetch organization records, update organization and invoke organization.<br><br> <b>Authentication</b><br><br> Salesken Organization APIs are authenticated using Basic Authentication with your Authentication API Key and OAuth2. The OAuth2 are available after you sign-up with the Salesken.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: itadmin@salesken.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package invalidPackageName;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import invalidPackageName.DatatableOrder;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * FilterModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-06-08T07:59:41.201Z[GMT]")public class FilterModel   {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("limit")
  private Integer limit = null;

  @JsonProperty("offset")
  private Integer offset = null;

  @JsonProperty("order")
  private List<DatatableOrder> order = null;

  public FilterModel id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * minimum: 1
   * @return id
   **/
  @JsonProperty("id")
  @Schema(description = "")
 @Min(1)  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public FilterModel limit(Integer limit) {
    this.limit = limit;
    return this;
  }

  /**
   * Get limit
   * minimum: 1
   * maximum: 2147483647
   * @return limit
   **/
  @JsonProperty("limit")
  @Schema(example = "1", description = "")
 @Min(1) @Max(2147483647)  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public FilterModel offset(Integer offset) {
    this.offset = offset;
    return this;
  }

  /**
   * Get offset
   * minimum: 0
   * maximum: 2147483647
   * @return offset
   **/
  @JsonProperty("offset")
  @Schema(example = "0", description = "")
 @Min(0) @Max(2147483647)  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public FilterModel order(List<DatatableOrder> order) {
    this.order = order;
    return this;
  }

  public FilterModel addOrderItem(DatatableOrder orderItem) {
    if (this.order == null) {
      this.order = new ArrayList<DatatableOrder>();
    }
    this.order.add(orderItem);
    return this;
  }

  /**
   * Get order
   * @return order
   **/
  @JsonProperty("order")
  @Schema(description = "")
  @Valid
  public List<DatatableOrder> getOrder() {
    return order;
  }

  public void setOrder(List<DatatableOrder> order) {
    this.order = order;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterModel filterModel = (FilterModel) o;
    return Objects.equals(this.id, filterModel.id) &&
        Objects.equals(this.limit, filterModel.limit) &&
        Objects.equals(this.offset, filterModel.offset) &&
        Objects.equals(this.order, filterModel.order);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, limit, offset, order);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

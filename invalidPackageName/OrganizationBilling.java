/*
 * Salesken Organization APIs
 * <b>Introduction</b><br><br>This is collection of Organization APIs. These are used to create organization, fetch organization records, update organization and invoke organization.<br><br> <b>Authentication</b><br><br> Salesken Organization APIs are authenticated using Basic Authentication with your Authentication API Key and OAuth2. The OAuth2 are available after you sign-up with the Salesken.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: itadmin@salesken.ai
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package invalidPackageName;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * OrganizationBilling
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2021-06-08T07:59:37.089Z[GMT]")public class OrganizationBilling   {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("organziationId")
  private Integer organziationId = null;

  @JsonProperty("userId")
  private Integer userId = null;

  @JsonProperty("billingCost")
  private Integer billingCost = null;

  @JsonProperty("billingMonth")
  private Integer billingMonth = null;

  @JsonProperty("overageMinutes")
  private Integer overageMinutes = null;

  @JsonProperty("activeUsers")
  private Integer activeUsers = null;

  @JsonProperty("internationalMinutes")
  private Integer internationalMinutes = null;

  public OrganizationBilling id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public OrganizationBilling organziationId(Integer organziationId) {
    this.organziationId = organziationId;
    return this;
  }

  /**
   * Get organziationId
   * @return organziationId
   **/
  @JsonProperty("organziationId")
  @Schema(description = "")
  public Integer getOrganziationId() {
    return organziationId;
  }

  public void setOrganziationId(Integer organziationId) {
    this.organziationId = organziationId;
  }

  public OrganizationBilling userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   **/
  @JsonProperty("userId")
  @Schema(description = "")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public OrganizationBilling billingCost(Integer billingCost) {
    this.billingCost = billingCost;
    return this;
  }

  /**
   * Get billingCost
   * @return billingCost
   **/
  @JsonProperty("billingCost")
  @Schema(description = "")
  public Integer getBillingCost() {
    return billingCost;
  }

  public void setBillingCost(Integer billingCost) {
    this.billingCost = billingCost;
  }

  public OrganizationBilling billingMonth(Integer billingMonth) {
    this.billingMonth = billingMonth;
    return this;
  }

  /**
   * Get billingMonth
   * @return billingMonth
   **/
  @JsonProperty("billingMonth")
  @Schema(description = "")
  public Integer getBillingMonth() {
    return billingMonth;
  }

  public void setBillingMonth(Integer billingMonth) {
    this.billingMonth = billingMonth;
  }

  public OrganizationBilling overageMinutes(Integer overageMinutes) {
    this.overageMinutes = overageMinutes;
    return this;
  }

  /**
   * Get overageMinutes
   * @return overageMinutes
   **/
  @JsonProperty("overageMinutes")
  @Schema(description = "")
  public Integer getOverageMinutes() {
    return overageMinutes;
  }

  public void setOverageMinutes(Integer overageMinutes) {
    this.overageMinutes = overageMinutes;
  }

  public OrganizationBilling activeUsers(Integer activeUsers) {
    this.activeUsers = activeUsers;
    return this;
  }

  /**
   * Get activeUsers
   * @return activeUsers
   **/
  @JsonProperty("activeUsers")
  @Schema(description = "")
  public Integer getActiveUsers() {
    return activeUsers;
  }

  public void setActiveUsers(Integer activeUsers) {
    this.activeUsers = activeUsers;
  }

  public OrganizationBilling internationalMinutes(Integer internationalMinutes) {
    this.internationalMinutes = internationalMinutes;
    return this;
  }

  /**
   * Get internationalMinutes
   * @return internationalMinutes
   **/
  @JsonProperty("internationalMinutes")
  @Schema(description = "")
  public Integer getInternationalMinutes() {
    return internationalMinutes;
  }

  public void setInternationalMinutes(Integer internationalMinutes) {
    this.internationalMinutes = internationalMinutes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationBilling organizationBilling = (OrganizationBilling) o;
    return Objects.equals(this.id, organizationBilling.id) &&
        Objects.equals(this.organziationId, organizationBilling.organziationId) &&
        Objects.equals(this.userId, organizationBilling.userId) &&
        Objects.equals(this.billingCost, organizationBilling.billingCost) &&
        Objects.equals(this.billingMonth, organizationBilling.billingMonth) &&
        Objects.equals(this.overageMinutes, organizationBilling.overageMinutes) &&
        Objects.equals(this.activeUsers, organizationBilling.activeUsers) &&
        Objects.equals(this.internationalMinutes, organizationBilling.internationalMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, organziationId, userId, billingCost, billingMonth, overageMinutes, activeUsers, internationalMinutes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationBilling {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    organziationId: ").append(toIndentedString(organziationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    billingCost: ").append(toIndentedString(billingCost)).append("\n");
    sb.append("    billingMonth: ").append(toIndentedString(billingMonth)).append("\n");
    sb.append("    overageMinutes: ").append(toIndentedString(overageMinutes)).append("\n");
    sb.append("    activeUsers: ").append(toIndentedString(activeUsers)).append("\n");
    sb.append("    internationalMinutes: ").append(toIndentedString(internationalMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
